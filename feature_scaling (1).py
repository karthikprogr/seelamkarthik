# -*- coding: utf-8 -*-
"""Feature_scaling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cDTxkaZWggFiu93yyKrzq_QfR-5sRyRr
"""

import pandas as pd
from sklearn.preprocessing import MinMaxScaler

data = {
    'Age': [25, 30, 35, 40, 45],
    "height": [150, 160, 170, 180, 190],
    "weight" : [50, 60, 70, 80, 90]
}

df = pd.DataFrame(data)
print("original dataframe")
print(df)
scaler = MinMaxScaler()
#normalize the dataset

normalized_data= scaler.fit_transform(df)

normalized_df = pd.DataFrame(normalized_data, columns=df.columns)
print("/nnormalized dataframe (scaled to range [0,1]):")
print(normalized_df)


#standardization
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
standardized_data = scaler.fit_transform(df)
standardized_df = pd.DataFrame(standardized_data, columns=df.columns)
print("/nstandardized dataframe:")
print(standardized_df)

#do the minmax and standization using csv file

#label encoder
import pandas as pd
from sklearn.preprocessing import LabelEncoder

data = {
    "customer_id" : [1,2,3,4,5],
    "ranks": ["good", "average", "bad", "good", "average"],
    "fruits": ["apple", "banana", "orange", "apple", "banana"]
}
df=pd.DataFrame(data)
print("original data")
print(df)

#apply the label encoder to ranks and fruits
encoder = LabelEncoder()
df["ranks_encoded"] = encoder.fit_transform(df["ranks"])
df["fruits_encoded"] = encoder.fit_transform(df["fruits"])
print("/nlabel encoded data")
print(df)

import pandas as pd
from sklearn.preprocessing import OneHotEncoder

#sample dataset
data = {
    "customer_id": [1, 2, 3, 4, 5],
    "gender": ["male", "female", "male", "female", "male"],
    "country": ["USA", "Canada", "USA", "Canada", "UK"],
    "fruits": ["apple", "banana", "orange", "apple", "banana"]
}
df = pd.DataFrame(data)
print("original data")
print(df)

#apply onehotencoder
encoder = OneHotEncoder(sparse_output=False)
encoded_data = encoder.fit_transform(df[["gender", "country","fruits"]])
encoded_df = pd.DataFrame(encoded_data, columns=encoder.get_feature_names_out(["gender", "country","fruits"]))
df = pd.concat([df, encoded_df], axis=1)
df.drop(["gender", "country","fruits"], axis=1, inplace=True)
print("/nencoded data")
print(df)

import pandas as pd
from sklearn.preprocessing import OneHotEncoder

#sample dataset
data = {
    "customer_id": [1, 2, 3, 4, 5],
    "gender": ["male", "female", "male", "female", "male"],
    "country": ["USA", "Canada", "USA", "Canada", "UK"],
    "fruits": ["apple", "banana", "orange", "apple", "banana"]
}
df = pd.DataFrame(data)
print("original data")
print(df)
one_hot_encoder = OneHotEncoder(sparse_output=False)
columns_to_encode = ["gender", "country", "fruits"]
encoded_data = one_hot_encoder.fit_transform(df[columns_to_encode])
encoded_df = pd.DataFrame(encoded_data, columns=one_hot_encoder.get_feature_names_out(columns_to_encode))
df = pd.concat([df, encoded_df], axis=1)
df.drop(columns_to_encode, axis=1, inplace=True)
print("/nencoded data")
print(df)

import pandas as pd

# Step 2: Upload the CSV file

from google.colab import files

uploaded = files.upload()

# Step 3: Read the uploaded CSV file

# Replace 'your_file.csv' with the actual file name after upload

file_name = list(uploaded.keys())[0]  # Automatically gets the uploaded file name

df = pd.read_csv("car.data")
print(df)

df.shape